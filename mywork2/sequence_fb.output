Rules useless in parser due to conflicts

    6 maybeword: /* empty */


State 0 conflicts: 1 shift/reduce, 2 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | sequence EOL

    3 sequence: /* empty */
    4         | maybeword
    5         | sequence WORD

    6 maybeword: /* empty */
    7          | WORD


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258) 5 7
EOL (259) 2


Nonterminals, with rules where they appear

$accept (5)
    on left: 0
input (6)
    on left: 1 2, on right: 0
sequence (7)
    on left: 3 4 5, on right: 2 5
maybeword (8)
    on left: 6 7, on right: 4


state 0

    0 $accept: . input $end

    WORD  shift, and go to state 1

    WORD      [reduce using rule 3 (sequence)]
    WORD      [reduce using rule 6 (maybeword)]
    EOL       reduce using rule 3 (sequence)
    EOL       [reduce using rule 6 (maybeword)]
    $default  reduce using rule 1 (input)

    input      go to state 2
    sequence   go to state 3
    maybeword  go to state 4


state 1

    7 maybeword: WORD .

    $default  reduce using rule 7 (maybeword)


state 2

    0 $accept: input . $end

    $end  shift, and go to state 5


state 3

    2 input: sequence . EOL
    5 sequence: sequence . WORD

    WORD  shift, and go to state 6
    EOL   shift, and go to state 7


state 4

    4 sequence: maybeword .

    $default  reduce using rule 4 (sequence)


state 5

    0 $accept: input $end .

    $default  accept


state 6

    5 sequence: sequence WORD .

    $default  reduce using rule 5 (sequence)


state 7

    2 input: sequence EOL .

    $default  reduce using rule 2 (input)
